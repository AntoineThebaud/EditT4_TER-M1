// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.PopupNew = (function(superClass) {
    extend(PopupNew, superClass);

    function PopupNew() {
      this.$popupnew = null;
    }

    PopupNew.prototype.create = function() {
      var $close_button, $create_notions_block, $create_notions_button, $open_block, $open_button;
      $open_button = this.createButton('Open');
      $open_button.on({
        click: (function(_this) {
          return function() {
            return _this.$popupnew.trigger('openNotions');
          };
        })(this)
      });
      $open_block = this.createBlock("Open");
      $open_block.append($open_button);
      $create_notions_button = this.createButton('Create from scratch');
      $create_notions_button.on({
        click: (function(_this) {
          return function() {
            return _this.$popupnew.trigger('createNotions');
          };
        })(this)
      });
      $create_notions_block = this.createBlock('Create from scratch');
      $create_notions_block.append($create_notions_button);
      $close_button = this.createCloseButton();
      this.$popupnew = this.createPopup([this.createTitle('New')], [$open_block, $create_notions_block], [$close_button]);
      return this.applyCloseButtonEvents($close_button, this.$popupnew);
    };

    PopupNew.prototype.show = function() {
      return this.$popupnew.popup('show');
    };

    PopupNew.prototype.close = function() {
      return this.$popupnew.popup('hide');
    };

    PopupNew.prototype.getNode = function() {
      return this.$popupnew;
    };

    return PopupNew;

  })(Popup);

}).call(this);
